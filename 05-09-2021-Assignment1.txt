CUSTOMER DATABASE

create database Customerdb;
use customerdb;

create table Customer(CustomerID int AUTO_INCREMENT primary key,CustomerName varchar(20),CustomerCity varchar(20),CustomerAddress varchar(50),CustomerMobileNo bigint unique,PAN varchar(20) unique,CustomerPassword varchar(20)) AUTO_INCREMENT=100;
insert into customer values(100,"Dhanam","Tvl","Kumaresan Nagar",7708980372,"FQMPD7825K",MD5("Dhanam"));
insert into customer values(101,"Anu","Tvl","Maharaja Nagar",7708956789,"ANUSH7826K",MD5("Anu"));
insert into customer values(102,"Ramya","Tvl","Jeyanthipuram",9812309465,"RAMYA9812M",MD5("Ramya"));
insert into customer values(103,"Shyami","Chennai","Thirumal Nagar",9489970918,"SHYAM9489I",MD5("Shyami"));
insert into customer values(104,"Sathiya","Madurai","Tvs Nagar",9476670818,"SATHI9476Y",MD5("Sathiya"));
insert into customer values(105,"Diya","Ooty","Porur",9414367595,"DIYAS9414Y",MD5("Diya"));
insert into customer values(106,"Riya","Madurai","Ktc Nagar",9942440918,"RIYAS9942L",MD5("Riya"));
insert into customer values(107,"Kavi","Coimbatore","Jeya Nagar",9952129191,"KAVIP9952P",MD5("Kavi"));
insert into customer values(108,"Tintu","Theni","Anbu Nagar",9384321369,"TINTP9384U",MD5("Tintu"));
insert into customer values(109,"Sindhu","Trichy","Chrompet",9994282220,"SINDH9994U",MD5("Sindhu"));

create table AccountInfo(AccountID bigint AUTO_INCREMENT primary key,CustomerID int,foreign key(CustomerID) references  CustomerInfo(CustomerID),AccountType varchar(20),AccountBalance bigint,AccountOpenDate date,AccountStatus Varchar(10) not null CHECK(AccountStatus in ('Open','Closed','Blocked')));
insert into AccountInfo values(123456780,100,"Salary Account",20000,'2021-01-09',"Open");
insert into AccountInfo values(123456781,101,"Savings Account",15000,'2021-01-09',"Closed");
insert into AccountInfo values(123456782,102,"Current Account",25000,'2021-01-09',"open");
insert into AccountInfo values(123456783,103,"Salary Account",50000,'2020-05-10',"open");
insert into AccountInfo values(123456784,104,"Savings Account",40000,'2019-01-12',"open");
insert into AccountInfo values(123456785,105,"Salary Account",20000,'2020-05-12',"Closed");
insert into AccountInfo values(123456786,106,"Current Account",10000,'2020-05-12',"Open");
insert into AccountInfo values(123456787,107,"Salary Account",30000,'2018-03-20',"Open");
insert into AccountInfo values(123456788,108,"Savings Account",30000,'2021-03-20',"Open");
insert into AccountInfo values(123456789,109,"Current Account",35000,'2021-08-22',"Closed");


create table TransactionInfo(TransactionID int AUTO_INCREMENT primary key,AccountID bigint,foreign key(AccountID) references AccountInfo(AccountID),TransactionType varchar(20) default 'Not Done',Amount bigint check(Amount>0),TransactionDate date);
insert into TransactionInfo values(0,123456780,"Debit",2000,'2021-05-09');
insert into TransactionInfo values(2,123456782,"Credit",1000,'2021-05-09');
insert into TransactionInfo values(3,123456783,"Credit",1550,'2021-05-22');
insert into TransactionInfo values(4,123456784,"Debit",800,'2021-01-09');
insert into TransactionInfo values(5,123456785,"Debit",1010,'2021-01-20');
insert into TransactionInfo values(6,123456786,"Credit",1015,'2021-08-20');
insert into TransactionInfo values(7,123456787,"Debit",10000,'2021-08-20');
insert into TransactionInfo values(8,123456788,"Credit",1000,'2021-08-20');
insert into TransactionInfo values(9,123456789,"Debit",12000,'2021-08-20');
insert into TransactionInfo values(10,123456789,"Credit",22000,'2021-10-20');
insert into TransactionInfo values(11,123456789,"Debit",2500,'2021-11-20');
insert into TransactionInfo values(12,123456783,"Credit",1550,'2021-05-30');
insert into TransactionInfo values(13,123456787,"Credit",1550,'2021-05-30');
insert into TransactionInfo values(14,123456781,"Credit",25000,'2021-11-20');
insert into TransactionInfo values(15,123456783,"Debit",1550,'2021-05-22');


Reports
1. Latest 5 transactions of an account (Enter Account ID as an Input).

select * from TransactionInfo where AccountID=123456789 order by TransactionDate desc limit 5;

2. Transaction between two dates of an account (Enter Account ID as an Input)

select * from TransactionInfo where AccountID=123456789 and TransactionDate between '2021-09-01' and '2021-12-01';

3. List of Accounts of a Customer (Enter Customer ID as an input)

 select * from AccountInfo where CustomerID=108;

4. List of customers(CustomerID,CustomerName,CustomerAddress,CustomerMobileNo, AccountID , AccountBalance).

select a.CustomerID,a.CustomerName,a.CustomerAddress,a.CustomerMobileNo,b.AccountID,b.AccountBalance from CustomerInfo a,Accountinfo b where a.CustomerID=b.CustomerID;

5. List of accounts with transactions (AccountID , AccountBalance , TransID , Amount, TransationType).

select a.AccountID,a.AccountBalance,b.TransactionID,b.Amount,b.TransactionType from AccountInfo a,TransactionInfo b where a.AccountID=b.AccountID;

6. List of customers with accounts and transations (CustomerID,CustomerName,CustomerAddress,CustomerMobileNo, AccountID , AccountBalance,TransationID , Amount, TransationType)

select a.CustomerID,a.CustomerName,a.CustomerAddress,a.CustomerMobileNo,b.AccountID,b.AccountBalance,c.TransactionID,c.Amount,c.TransactionType from CustomerInfo a,AccountInfo b,TransactionInfo c where a.CustomerID=b.CustomerID and b.AccountID=c.AccountID;


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------


ONLINE FOOD ORDERING DATABASE

create database OnlineFoodOrderingDB;
use OnlineFoodOrderingDB;

create table Restaurants(RestaurantID int Auto_Increment primary key,RestaurantName varchar(20),RestaurantAddress varchar(20),RestaurantCity varchar(20),ContactNo bigint);
insert into restaurants values(10,"Madhuram","Maharaja Nagar","Tvl",7708980372);
insert into restaurants values(11,"Choco Room","Jeyanthipuram","Kovai",9674351524);
insert into restaurants values(12,"Janakiram","Tvs Nagar","Ooty",9952129199);
insert into restaurants values(13,"Kamalia","Virudhu Nagar","Sivakasi",7496848615);
insert into restaurants values(14,"Bharani","Porur","Chennai",9426759584);
insert into restaurants values(15,"Saravana","Palayamkottai","Tvl",9923429199);


create table RMenuItems(MenuId int Auto_Increment Primary key,RestaurantID int,foreign key(restaurantID) references Restaurants(RestaurantID),MenuName varchar(20),MenuType varchar(20),MenuCategory varchar(20),MenuPrice int,MenuDesc varchar(20));
insert into RMenuItems values(1,10,"Veg","Dessert","Dinner",90,"Vanilla Milkshake");
insert into RMenuItems values(2,10,"Non-Veg","Gravy","Lunch",180,"Butter Chicken");
insert into RMenuItems values(3,11,"Non-Veg","Roti","Dinner",100,"Parotta");
insert into RMenuItems values(4,11,"Veg","Fry","Snacks",90,"Gobi 65");
insert into RMenuItems values(5,12,"Veg","Dosa","Breakfast",60,"Onion Uthappam");
insert into RMenuItems values(6,13,"Non-Veg","Rice","Lunch",150,"Egg Fried Rice");
insert into RMenuItems values(7,13,"Veg","Dessert","Dinner",30,"Gulab Jamun");
insert into RMenuItems values(8,14,"Non-Veg","Noodles","Lunch",120,"Chicken Noodles");
insert into RMenuItems values(9,15,"Veg","Starters","Snacks",50,"Babycorn 65");
insert into RMenuItems values(10,15,"Veg","Dosa","Breakfast",75,"Special Dosa");

create table Customers(CustomerID varchar(20) Primary key,CustomerName varchar(20),CustomerCity varchar(10),CustomerGender varchar(1) check (CustomerGender in ('F','M','T')),CustomerPassword varchar(50));
insert into customers values("dhanam@gmail.com","Dhanam","Tvl",'F',MD5("Dhanam"));
insert into customers values("riya@gmail.com","Riya","Ngl",'F',MD5("Riya"));
insert into customers values("jk@gmail.com","JK","Svk",'M',MD5("JK"));
insert into customers values("diya@gmail.com","Diya","Ooty",'F',MD5("Diya"));
insert into customers values("tintu@gmail.com","Tintu","Kovai",'F',MD5("Tintu"));

create table Orders(OrderID int Auto_Increment Primary key,CustomerID varchar(20),foreign key(CustomerID) references Customers(CustomerID),OrderDate date,DeliveryAddress varchar(50),OrderStatus varchar(20) check(orderstatus in ("Delivered","Cancelled")));
insert into orders values(101,"dhanam@gmail.com",'2021-05-09',"Kumaresan Nagar Tvl","Delivered");
insert into orders values(102,"diya@gmail.com",'2021-05-09',"Tvs Nagar Tvl","Cancelled");
insert into orders values(103,"jk@gmail.com",'2021-04-09',"Thirumal Nagar Ooty","Delivered");
insert into orders values(104,"riya@gmail.com",'2021-04-09',"Porur Chennai","Delivered");
insert into orders values(105,"tintu@gmail.com",'2021-01-09',"Gindy","Cancelled");

create table OrderMenus(OrderID int,foreign key(OrderID) references Orders(OrderID),MenuID int ,foreign key(MenuID) references RMenuItems(MenuID),MenuQty int,MenuPrice int);
insert into OrderMenus values(101,2,1,180);
insert into OrderMenus values(102,1,2,180);
insert into OrderMenus values(104,10,1,75);
insert into OrderMenus values(103,6,1,150);
insert into OrderMenus values(105,6,1,150);

Reports / Queries

1. Show the list of Restaurant of specific city

select * from Restaurants where RestaurantCity="Tvl";

2. Show the list of all Restaurants along with menus (RestaurantID , RestaurantName ,MenuID , MenuName , MenuPrice)

select a.RestaurantID,a.RestaurantName,b.MenuID,b.MenuName,b.MenuPrice from Restaurants a,RMenuItems b where a.RestaurantID=b.RestaurantID;

3. Show the list of  Restaurants along with menus (RestaurantID , RestaurantName ,MenuID , MenuName , MenuPrice) of specific city

select a.RestaurantID,a.RestaurantName,b.MenuID,b.MenuName,b.MenuPrice from Restaurants a,RMenuItems b where a.RestaurantID=b.RestaurantID and RestaurantCity="Chennai";

4. Show the list of Orders of a specific customer

select a.CustomerName,a.CustomerID,a.CustomerCity,b.OrderID,b.OrderDate,b.OrderStatus,c.MenuQty,c.MenuPrice from Customers a,Orders b,OrderMenus c where a.CustomerID=b.CustomerID and b.OrderID=c.OrderID and CustomerName="Dhanam";

5. Show the list of orders along with ordermenus of a specific customer

select a.CustomerName,a.CustomerID,b.OrderDate,b.OrderStatus,c.MenuQty,c.MenuPrice,d1.RestaurantName,d.MenuName,d.MenuType,d.MenuCategory,d.MenuDesc from Customers a,Orders b,OrderMenus c ,RMenuItems d,Restaurants d1 where a.CustomerID=b.CustomerID and b.OrderID=c.OrderID and c.MenuId=d.MenuID and d1.RestaurantID=d.RestaurantID and CustomerName="Dhanam";

6. Show the list of latest 5 orders of a specific customer

select a.CustomerName,a.CustomerID,a.CustomerCity,b.OrderID,b.OrderDate,b.OrderStatus,c.MenuQty,c.MenuPrice from Customers a,Orders b,OrderMenus c where a.CustomerID=b.CustomerID and b.OrderID=c.OrderID and CustomerName="Dhanam" order by OrderDate desc limit 5;

